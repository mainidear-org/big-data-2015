spring:
  main:
    show_banner: true
  hadoop:
    fsUri: hdfs://localhost:8020
    resourceManagerHost: localhost
    jobHistoryAddress: localhost:10020
    config:
      mapreduce.framework.name: yarn
mapreduce:
  jar: file:#{systemProperties['user.dir']}/hadoop-mapreduce-examples-2.6.0.jar
  input: /user/#{systemProperties['user.name']}/example/input
  output: /user/#{systemProperties['user.name']}/example/output
---

spring:
  profiles: lattice
  hadoop:
    fsUri: hdfs://${hadoop.host}:${hadoop.fsPort}
    resourceManagerHost: ${hadoop.host}
    jobHistoryAddress: ${hadoop.host}:10020
    config:
      mapreduce.framework.name: yarn
hadoop:
  host: localhost
  fsPort: 8020
---

spring:
  profiles: docker
  hadoop:
    fsUri: hdfs://${hadoop.host}:${hadoop.fsPort}
    resourceManagerHost: ${hadoop.host}
    jobHistoryAddress: ${hadoop.host}:10020
    config:
      mapreduce.framework.name: yarn
hadoop:
  host: localhost
  fsPort: 9000
---

spring:
  profiles: socks-proxy
  hadoop:
    fsUri: hdfs://${hadoop.host}:${hadoop.fsPort}
    resourceManagerHost: ${hadoop.host}
    jobHistoryAddress: ${hadoop.host}:10020
    config:
      mapreduce.jobhistory.address: ${hadoop.host}:10020
      mapreduce.framework.name: local
      hadoop.socks.server: ltchost:1099
      hadoop.rpc.socket.factory.class.default: org.apache.hadoop.net.SocksSocketFactory
      dfs.client.use.legacy.blockreader: true
hadoop:
  host: ltchost
  fsPort: 9000
---

spring:
  profiles: lattice,socks-proxy,docker
mapreduce:
  jar: file:///hadoop-mapreduce-examples-2.6.0.jar
---
